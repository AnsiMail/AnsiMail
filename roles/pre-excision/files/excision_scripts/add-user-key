#!/bin/sh

# This script assumes that you are working with 
# a clean database that has been verified with userdb-check
# The behaviour is undefined on random unstable databases
# It may mutate your cat and make your kombucha lose its fizzzzzzz

. /usr/local/lib/excision/helpers/variables

if [ "$#" -ne 1 ]; then
	echo "Incorrect number of arguments to add-user-key: user@domain"
	exit 255
fi

user="$1"

printf "ssh-key: "
read -r ssh_key
printf "\n"

# first do a sanity check on the public key
echo "$ssh_key" | ssh-keygen -l -f -

if [ $? -ne 0 ]; then
	echo "Error: not a valid public key file"
	exit 3
fi

# make a backup of the current keys file
bak=$(date +%Y%d%m%H%M)
cp "$empasswdtempfile" "$empasswdtempfile.$bak"

# generate the command to add to the password file
passwd_command="restrict,pty,command=\"doas /usr/local/bin/excision-change-user-passwd $user\" $ssh_key"

# add the new command to the passwdfile
echo "$passwd_command" >> "$empasswdtempfile" 

cp "$empasswdtempfile" "$empasswdfile"
