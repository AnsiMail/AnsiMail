$TTL	10800		; 3h ; used for all entries without ttl values, hence it can be overloaded by individual entries
			; We should keep this at a reasonable number so as to not get too many requests 
			; but also small enough that if something changes it gets transferred fast enough through the network
$ORIGIN	{{ domain }}.

@	1d	SOA	ns1.{{ domain }}.	root.{{ domain }}. (
	{{ nsdserial.stdout }}		; serial
	3h			; refresh
	3m			; retry
	1w			; expire
	1d			; minimum
)


; CAA
; this ensures that only certificates issues by letsencrypt should be trusted for this domain
; don't trust cloudflare
@	IN	CAA	0	issue		"letsencrypt.org"
@	IN	CAA	0	issuewild	"letsencrypt.org"

; we set the acceptable nameservers for this domain
; don't trust cloudflare
{% for ps in public_nameservers %}
@	IN	NS	ns{{ loop.index }}.{{ domain }}.
{% if ps.ipv4 is defined %}
ns{{ loop.index }}	IN	A	{{ ps.ipv4 }}
{% endif %}
{% if ps.ipv6 is defined %}
ns{{ loop.index }}	IN	AAAA	{{ ps.ipv6 }}
{% endif %}
{% endfor %}

; these are the domain names that will be accepted on this server
@	IN	A	{{ ipv4 }}
@	IN	AAAA	{{ ipv6 }}

www	IN	A	{{ ipv4 }}
www	IN	AAAA	{{ ipv6 }}

{{ hostname }}	IN	A	{{ ipv4 }}
{{ hostname }}	IN	AAAA	{{ ipv6 }}

; currently we don't have a backup MX server
; TODO: set up configuration to allow backup mail server
@	IN	MX	0	{{ hostname }}.{{ domain }}.

; autoconfig is used by mail clients to automatically set up
; the IMAP/SMTP configurations; specifically mozilla
autoconfig	IN	CNAME	{{ hostname }}.{{ domain }}.
; autodiscover is used by mail clients based on outlook
; damn you microsoft; why not just use autoconfig
autodiscover	IN	CNAME	{{ hostname }}.{{ domain }}
; also set up other well known CNAME records in case of 
; older non compliant clients
imap	IN	CNAME	{{ hostname }}.{{ domain }}.
smtp	IN	CNAME	{{ hostname }}.{{ domain }}.
; wkd is used for the web key directory service
; which allows us to use openpgp encryption on the email
; without doing anything on the client side
; gives an extra layer of encryption
wkd	IN	CNAME	{{ hostname }}.{{ domain }}.
; strict transport security
; somewhat like DANE but doesn't need DNSSEC
mta-sts	IN	CNAME	{{ hostname }}.{{ domain }}.

; we also detail all the services used and the ports that they map to
_openpgpkey._tcp	IN	SRV	0	0	443	wkd.{{ domain }}.
; we need autodiscover service >.>
; damn you microsoft
_autodiscover._tcp	IN	SRV	0	0	443	autodiscover.{{ domain }}.
; submission's' is the SSL/TLS port while without the 's' is the STARTTLS
_submissions._tcp	IN	SRV	0	1	465	{{ hostname }}.{{ domain }}. ; SSL/TLS
_submission._tcp	IN	SRV	5	1	587	{{ hostname }}.{{ domain }}. ; STARTTLS
_imaps._tcp	IN	SRV	0	1	993	{{ hostname }}.{{ domain }}
; we disable POP3 and insecure IMAP from being automatically detected
; mayhaps you can override them on a client but just don't use them
_imap._tcp	IN	SRV	0	0	0	.
_pop3s._tcp	IN	SRV	0	0	0	.
_pop3._tcp	IN	SRV	0	0	0	.

; we also need to setup the acceptable mail server in the SPF record
@	IN	TXT	"v=spf1 mx -all"
_dmarc	IN	TXT	"v=DMARC1;p=reject;pct=100;rua=mailto:dmarcreports@{{ domain }};"
; these two are needed to finalize MTA-STS (along with publishing the policy in a mta-sts.txt file in httpd
_smtp._tls	IN	TXT	"v=TLSRPTv1;rua=mailto:tlsreports@{{ domain }};"
_mta-sts	IN	TXT	"v=STSv1;id={{ nsdserial.stdout }};"

{{ nsddkim.stdout }}

; ansible will add the SSHFP records here
