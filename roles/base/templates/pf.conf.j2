# to get the contents of a table
#    : pfctl -t tablename -T show
#


# read the file /etc/services to get an idea of predefined port names
inbound_tcp = "{ smtps, submission, domain, sieve, imaps, pop3s, http, https }"
inbound_udp = "{ domain }"

# check what port we want ssh to run on and open that specific one
{% if ssh_port is defined %}
ssh_port = "{ {{ ssh_port }} }"
{% else %}
ssh_port = "{ ssh }"
{% endif %}

# we will also need to open the additional ports defined by the user
{% if additional_tcp_ports is defined %}
additional_tcp_ports = "{ {{ additional_tcp_ports | join(', ') }} }"
{% endif %}

{% if additional_udp_ports is defined %}
additional_udp_ports = "{ {{ additional_udp_ports | join(', ') }} }"
{% endif %}

# spamd-white is the automatically managed table 
# we should not touch that one
table <spamd-white> persist
# bigmailers is going to  contain the ip addresses of 
# big mail corps with multiple ip addresses 
table <bigmailers> persist file "/etc/ansimail/spam/bigmailers"
# nospamd is the one where you manually add ips
# of friends and others with misconfigured servers are added
table <nospamd> persist file "/etc/ansimail/spam/nospamd"

# better not mess with the loopback interface
set skip on lo

# this enables blocking all packets without logging them
# because we don't really care about random ports
block all

pass proto icmp
pass proto icmp6

{% if private_interface is defined %}
pass in on {{ private_interface }}
{% endif %}

pass in on egress proto tcp to port smtp divert-to 127.0.0.1 port spamd
pass in on egress proto tcp from { <nospamd>, <bigmailers>, <spamd-white> } to port smtp

pass in on egress proto tcp to port $ssh_port

pass in on egress proto tcp to port $inbound_tcp
pass in on egress proto udp to port $inbound_udp

{% if additional_tcp_ports is defined %}
pass in on egress proto tcp to port $additional_tcp_ports
{% endif %}

{% if additional_udp_ports is defined %}
pass in on egress proto udp to port $additional_udp_ports
{% endif %}

pass out
